vendor_name = ModelSim
source_file = 1, C:/Users/eldad/OneDrive/Desktop/CPEN311/LAB4/RC4_Breaker/rtl/Task1/task1_simulation.vwf
source_file = 1, C:/Users/eldad/OneDrive/Desktop/CPEN311/LAB4/RC4_Breaker/rtl/Task1/populate_s_mem_by_index.sv
design_name = populate_s_mem_by_index
instance = comp, \address_out[0]~output , address_out[0]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[1]~output , address_out[1]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[2]~output , address_out[2]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[3]~output , address_out[3]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[4]~output , address_out[4]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[5]~output , address_out[5]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[6]~output , address_out[6]~output, populate_s_mem_by_index, 1
instance = comp, \address_out[7]~output , address_out[7]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[0]~output , data_out[0]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[1]~output , data_out[1]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[2]~output , data_out[2]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[3]~output , data_out[3]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[4]~output , data_out[4]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[5]~output , data_out[5]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[6]~output , data_out[6]~output, populate_s_mem_by_index, 1
instance = comp, \data_out[7]~output , data_out[7]~output, populate_s_mem_by_index, 1
instance = comp, \write_enable_out~output , write_enable_out~output, populate_s_mem_by_index, 1
instance = comp, \assign_by_index_done~output , assign_by_index_done~output, populate_s_mem_by_index, 1
instance = comp, \clk~input , clk~input, populate_s_mem_by_index, 1
instance = comp, \Add0~1 , Add0~1, populate_s_mem_by_index, 1
instance = comp, \reset~input , reset~input, populate_s_mem_by_index, 1
instance = comp, \Add0~5 , Add0~5, populate_s_mem_by_index, 1
instance = comp, \address[1] , address[1], populate_s_mem_by_index, 1
instance = comp, \Add0~9 , Add0~9, populate_s_mem_by_index, 1
instance = comp, \address[2] , address[2], populate_s_mem_by_index, 1
instance = comp, \Add0~13 , Add0~13, populate_s_mem_by_index, 1
instance = comp, \address[3] , address[3], populate_s_mem_by_index, 1
instance = comp, \Add0~17 , Add0~17, populate_s_mem_by_index, 1
instance = comp, \address[4] , address[4], populate_s_mem_by_index, 1
instance = comp, \Add0~21 , Add0~21, populate_s_mem_by_index, 1
instance = comp, \address[5] , address[5], populate_s_mem_by_index, 1
instance = comp, \Add0~25 , Add0~25, populate_s_mem_by_index, 1
instance = comp, \address[6] , address[6], populate_s_mem_by_index, 1
instance = comp, \Add0~29 , Add0~29, populate_s_mem_by_index, 1
instance = comp, \address[7] , address[7], populate_s_mem_by_index, 1
instance = comp, \Add0~33 , Add0~33, populate_s_mem_by_index, 1
instance = comp, \address[8] , address[8], populate_s_mem_by_index, 1
instance = comp, \LessThan0~0 , LessThan0~0, populate_s_mem_by_index, 1
instance = comp, \start~input , start~input, populate_s_mem_by_index, 1
instance = comp, \next_state.IDLE~0 , next_state.IDLE~0, populate_s_mem_by_index, 1
instance = comp, \current_state.IDLE , current_state.IDLE, populate_s_mem_by_index, 1
instance = comp, \next_state.FIRST~0 , next_state.FIRST~0, populate_s_mem_by_index, 1
instance = comp, \current_state.FIRST , current_state.FIRST, populate_s_mem_by_index, 1
instance = comp, \Selector0~0 , Selector0~0, populate_s_mem_by_index, 1
instance = comp, \current_state.WAIT , current_state.WAIT, populate_s_mem_by_index, 1
instance = comp, \next_state.DISEBLE~0 , next_state.DISEBLE~0, populate_s_mem_by_index, 1
instance = comp, \current_state.DISEBLE , current_state.DISEBLE, populate_s_mem_by_index, 1
instance = comp, \next_state.ASSIGN~0 , next_state.ASSIGN~0, populate_s_mem_by_index, 1
instance = comp, \current_state.ASSIGN , current_state.ASSIGN, populate_s_mem_by_index, 1
instance = comp, \address[0]~0 , address[0]~0, populate_s_mem_by_index, 1
instance = comp, \address[0] , address[0], populate_s_mem_by_index, 1
instance = comp, \Selector1~0 , Selector1~0, populate_s_mem_by_index, 1
instance = comp, \current_state.FINISH , current_state.FINISH, populate_s_mem_by_index, 1
instance = comp, \write_enable_out~0 , write_enable_out~0, populate_s_mem_by_index, 1
instance = comp, \write_enable_out~reg0 , write_enable_out~reg0, populate_s_mem_by_index, 1
instance = comp, \assign_by_index_done~0 , assign_by_index_done~0, populate_s_mem_by_index, 1
instance = comp, \assign_by_index_done~reg0 , assign_by_index_done~reg0, populate_s_mem_by_index, 1
