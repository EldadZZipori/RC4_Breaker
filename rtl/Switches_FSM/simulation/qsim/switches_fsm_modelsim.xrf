vendor_name = ModelSim
source_file = 1, C:/Users/eldad/OneDrive/Desktop/CPEN311/LAB4/RC4_Breaker/rtl/Switches_FSM/switches_fsm.sv
source_file = 1, C:/Users/eldad/OneDrive/Desktop/CPEN311/LAB4/RC4_Breaker/rtl/Switches_FSM/db/switches_fsm.cbx.xml
design_name = switches_fsm
instance = comp, \LEDR[0]~output , LEDR[0]~output, switches_fsm, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, switches_fsm, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, switches_fsm, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, switches_fsm, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, switches_fsm, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, switches_fsm, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, switches_fsm, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, switches_fsm, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, switches_fsm, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, switches_fsm, 1
instance = comp, \secret_key[0]~output , secret_key[0]~output, switches_fsm, 1
instance = comp, \secret_key[1]~output , secret_key[1]~output, switches_fsm, 1
instance = comp, \secret_key[2]~output , secret_key[2]~output, switches_fsm, 1
instance = comp, \secret_key[3]~output , secret_key[3]~output, switches_fsm, 1
instance = comp, \secret_key[4]~output , secret_key[4]~output, switches_fsm, 1
instance = comp, \secret_key[5]~output , secret_key[5]~output, switches_fsm, 1
instance = comp, \secret_key[6]~output , secret_key[6]~output, switches_fsm, 1
instance = comp, \secret_key[7]~output , secret_key[7]~output, switches_fsm, 1
instance = comp, \secret_key[8]~output , secret_key[8]~output, switches_fsm, 1
instance = comp, \secret_key[9]~output , secret_key[9]~output, switches_fsm, 1
instance = comp, \key_available~output , key_available~output, switches_fsm, 1
instance = comp, \key_changed~output , key_changed~output, switches_fsm, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, switches_fsm, 1
instance = comp, \SW[0]~input , SW[0]~input, switches_fsm, 1
instance = comp, \SW[9]~input , SW[9]~input, switches_fsm, 1
instance = comp, \secret_key[9]~reg0 , secret_key[9]~reg0, switches_fsm, 1
instance = comp, \Equal0~0 , Equal0~0, switches_fsm, 1
instance = comp, \SW[6]~input , SW[6]~input, switches_fsm, 1
instance = comp, \secret_key[6]~reg0 , secret_key[6]~reg0, switches_fsm, 1
instance = comp, \SW[7]~input , SW[7]~input, switches_fsm, 1
instance = comp, \secret_key[7]~reg0 , secret_key[7]~reg0, switches_fsm, 1
instance = comp, \SW[8]~input , SW[8]~input, switches_fsm, 1
instance = comp, \secret_key[8]~reg0 , secret_key[8]~reg0, switches_fsm, 1
instance = comp, \Equal0~1 , Equal0~1, switches_fsm, 1
instance = comp, \SW[1]~input , SW[1]~input, switches_fsm, 1
instance = comp, \secret_key[1]~reg0 , secret_key[1]~reg0, switches_fsm, 1
instance = comp, \SW[2]~input , SW[2]~input, switches_fsm, 1
instance = comp, \secret_key[2]~reg0 , secret_key[2]~reg0, switches_fsm, 1
instance = comp, \Equal0~2 , Equal0~2, switches_fsm, 1
instance = comp, \SW[3]~input , SW[3]~input, switches_fsm, 1
instance = comp, \secret_key[3]~reg0 , secret_key[3]~reg0, switches_fsm, 1
instance = comp, \SW[4]~input , SW[4]~input, switches_fsm, 1
instance = comp, \secret_key[4]~reg0 , secret_key[4]~reg0, switches_fsm, 1
instance = comp, \SW[5]~input , SW[5]~input, switches_fsm, 1
instance = comp, \secret_key[5]~reg0 , secret_key[5]~reg0, switches_fsm, 1
instance = comp, \Equal0~3 , Equal0~3, switches_fsm, 1
instance = comp, \current_state[0] , current_state[0], switches_fsm, 1
instance = comp, \current_state[1] , current_state[1], switches_fsm, 1
instance = comp, \Mux0~0 , Mux0~0, switches_fsm, 1
instance = comp, \Mux0~1 , Mux0~1, switches_fsm, 1
instance = comp, \current_state[3] , current_state[3], switches_fsm, 1
instance = comp, \Mux1~0 , Mux1~0, switches_fsm, 1
instance = comp, \Mux1~1 , Mux1~1, switches_fsm, 1
instance = comp, \current_state[2] , current_state[2], switches_fsm, 1
instance = comp, \Equal1~0 , Equal1~0, switches_fsm, 1
instance = comp, \secret_key[0]~reg0 , secret_key[0]~reg0, switches_fsm, 1
instance = comp, \reset~input , reset~input, switches_fsm, 1
