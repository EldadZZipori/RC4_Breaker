// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.2 Build 203 01/18/2017 SJ Lite Edition"

// DATE "06/12/2024 11:50:04"

// 
// Device: Altera 5CSEMA6F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module switches_fsm (
	CLOCK_50,
	reset,
	SW,
	LEDR,
	secret_key,
	key_available,
	key_changed);
input 	CLOCK_50;
input 	reset;
input 	[9:0] SW;
output 	[9:0] LEDR;
output 	[9:0] secret_key;
output 	key_available;
output 	key_changed;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \reset~input_o ;
wire \LEDR[0]~output_o ;
wire \LEDR[1]~output_o ;
wire \LEDR[2]~output_o ;
wire \LEDR[3]~output_o ;
wire \LEDR[4]~output_o ;
wire \LEDR[5]~output_o ;
wire \LEDR[6]~output_o ;
wire \LEDR[7]~output_o ;
wire \LEDR[8]~output_o ;
wire \LEDR[9]~output_o ;
wire \secret_key[0]~output_o ;
wire \secret_key[1]~output_o ;
wire \secret_key[2]~output_o ;
wire \secret_key[3]~output_o ;
wire \secret_key[4]~output_o ;
wire \secret_key[5]~output_o ;
wire \secret_key[6]~output_o ;
wire \secret_key[7]~output_o ;
wire \secret_key[8]~output_o ;
wire \secret_key[9]~output_o ;
wire \key_available~output_o ;
wire \key_changed~output_o ;
wire \CLOCK_50~input_o ;
wire \SW[0]~input_o ;
wire \SW[9]~input_o ;
wire \secret_key[9]~reg0_q ;
wire \Equal0~0_combout ;
wire \SW[6]~input_o ;
wire \secret_key[6]~reg0_q ;
wire \SW[7]~input_o ;
wire \secret_key[7]~reg0_q ;
wire \SW[8]~input_o ;
wire \secret_key[8]~reg0_q ;
wire \Equal0~1_combout ;
wire \SW[1]~input_o ;
wire \secret_key[1]~reg0_q ;
wire \SW[2]~input_o ;
wire \secret_key[2]~reg0_q ;
wire \Equal0~2_combout ;
wire \SW[3]~input_o ;
wire \secret_key[3]~reg0_q ;
wire \SW[4]~input_o ;
wire \secret_key[4]~reg0_q ;
wire \SW[5]~input_o ;
wire \secret_key[5]~reg0_q ;
wire \Equal0~3_combout ;
wire \Mux0~0_combout ;
wire \Mux0~1_combout ;
wire \Mux1~0_combout ;
wire \Mux1~1_combout ;
wire \Equal1~0_combout ;
wire \secret_key[0]~reg0_q ;
wire [3:0] current_state;


cyclonev_io_obuf \LEDR[0]~output (
	.i(\secret_key[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
defparam \LEDR[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[1]~output (
	.i(\secret_key[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
defparam \LEDR[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[2]~output (
	.i(\secret_key[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
defparam \LEDR[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[3]~output (
	.i(\secret_key[3]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
defparam \LEDR[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[4]~output (
	.i(\secret_key[4]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[4]~output .bus_hold = "false";
defparam \LEDR[4]~output .open_drain_output = "false";
defparam \LEDR[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[5]~output (
	.i(\secret_key[5]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[5]~output .bus_hold = "false";
defparam \LEDR[5]~output .open_drain_output = "false";
defparam \LEDR[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[6]~output (
	.i(\secret_key[6]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[6]~output .bus_hold = "false";
defparam \LEDR[6]~output .open_drain_output = "false";
defparam \LEDR[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[7]~output (
	.i(\secret_key[7]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[7]~output .bus_hold = "false";
defparam \LEDR[7]~output .open_drain_output = "false";
defparam \LEDR[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[8]~output (
	.i(\secret_key[8]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[8]~output .bus_hold = "false";
defparam \LEDR[8]~output .open_drain_output = "false";
defparam \LEDR[8]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \LEDR[9]~output (
	.i(\secret_key[9]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[9]~output .bus_hold = "false";
defparam \LEDR[9]~output .open_drain_output = "false";
defparam \LEDR[9]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[0]~output (
	.i(\secret_key[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[0]~output .bus_hold = "false";
defparam \secret_key[0]~output .open_drain_output = "false";
defparam \secret_key[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[1]~output (
	.i(\secret_key[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[1]~output .bus_hold = "false";
defparam \secret_key[1]~output .open_drain_output = "false";
defparam \secret_key[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[2]~output (
	.i(\secret_key[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[2]~output .bus_hold = "false";
defparam \secret_key[2]~output .open_drain_output = "false";
defparam \secret_key[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[3]~output (
	.i(\secret_key[3]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[3]~output .bus_hold = "false";
defparam \secret_key[3]~output .open_drain_output = "false";
defparam \secret_key[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[4]~output (
	.i(\secret_key[4]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[4]~output .bus_hold = "false";
defparam \secret_key[4]~output .open_drain_output = "false";
defparam \secret_key[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[5]~output (
	.i(\secret_key[5]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[5]~output .bus_hold = "false";
defparam \secret_key[5]~output .open_drain_output = "false";
defparam \secret_key[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[6]~output (
	.i(\secret_key[6]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[6]~output .bus_hold = "false";
defparam \secret_key[6]~output .open_drain_output = "false";
defparam \secret_key[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[7]~output (
	.i(\secret_key[7]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[7]~output .bus_hold = "false";
defparam \secret_key[7]~output .open_drain_output = "false";
defparam \secret_key[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[8]~output (
	.i(\secret_key[8]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[8]~output .bus_hold = "false";
defparam \secret_key[8]~output .open_drain_output = "false";
defparam \secret_key[8]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \secret_key[9]~output (
	.i(\secret_key[9]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\secret_key[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \secret_key[9]~output .bus_hold = "false";
defparam \secret_key[9]~output .open_drain_output = "false";
defparam \secret_key[9]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \key_available~output (
	.i(current_state[2]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\key_available~output_o ),
	.obar());
// synopsys translate_off
defparam \key_available~output .bus_hold = "false";
defparam \key_available~output .open_drain_output = "false";
defparam \key_available~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \key_changed~output (
	.i(current_state[3]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\key_changed~output_o ),
	.obar());
// synopsys translate_off
defparam \key_changed~output .bus_hold = "false";
defparam \key_changed~output .open_drain_output = "false";
defparam \key_changed~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLOCK_50~input (
	.i(CLOCK_50),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLOCK_50~input_o ));
// synopsys translate_off
defparam \CLOCK_50~input .bus_hold = "false";
defparam \CLOCK_50~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[9]~input (
	.i(SW[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[9]~input_o ));
// synopsys translate_off
defparam \SW[9]~input .bus_hold = "false";
defparam \SW[9]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[9]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[9]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[9]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[9]~reg0 .is_wysiwyg = "true";
defparam \secret_key[9]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = !\secret_key[9]~reg0_q  $ (!\SW[9]~input_o )

	.dataa(!\secret_key[9]~reg0_q ),
	.datab(!\SW[9]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~0 .extended_lut = "off";
defparam \Equal0~0 .lut_mask = 64'h6666666666666666;
defparam \Equal0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[6]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[6]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[6]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[6]~reg0 .is_wysiwyg = "true";
defparam \secret_key[6]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[7]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[7]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[7]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[7]~reg0 .is_wysiwyg = "true";
defparam \secret_key[7]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[8]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[8]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[8]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[8]~reg0 .is_wysiwyg = "true";
defparam \secret_key[8]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = ( \SW[7]~input_o  & ( \SW[8]~input_o  & ( (\secret_key[7]~reg0_q  & (\secret_key[8]~reg0_q  & (!\secret_key[6]~reg0_q  $ (\SW[6]~input_o )))) ) ) ) # ( !\SW[7]~input_o  & ( \SW[8]~input_o  & ( (!\secret_key[7]~reg0_q  & 
// (\secret_key[8]~reg0_q  & (!\secret_key[6]~reg0_q  $ (\SW[6]~input_o )))) ) ) ) # ( \SW[7]~input_o  & ( !\SW[8]~input_o  & ( (\secret_key[7]~reg0_q  & (!\secret_key[8]~reg0_q  & (!\secret_key[6]~reg0_q  $ (\SW[6]~input_o )))) ) ) ) # ( !\SW[7]~input_o  & 
// ( !\SW[8]~input_o  & ( (!\secret_key[7]~reg0_q  & (!\secret_key[8]~reg0_q  & (!\secret_key[6]~reg0_q  $ (\SW[6]~input_o )))) ) ) )

	.dataa(!\secret_key[6]~reg0_q ),
	.datab(!\secret_key[7]~reg0_q ),
	.datac(!\secret_key[8]~reg0_q ),
	.datad(!\SW[6]~input_o ),
	.datae(!\SW[7]~input_o ),
	.dataf(!\SW[8]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~1 .extended_lut = "off";
defparam \Equal0~1 .lut_mask = 64'h8040201008040201;
defparam \Equal0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[1]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[1]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[1]~reg0 .is_wysiwyg = "true";
defparam \secret_key[1]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[2]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[2]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[2]~reg0 .is_wysiwyg = "true";
defparam \secret_key[2]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = ( \SW[1]~input_o  & ( \SW[2]~input_o  & ( (\secret_key[1]~reg0_q  & (\secret_key[2]~reg0_q  & (!\secret_key[0]~reg0_q  $ (\SW[0]~input_o )))) ) ) ) # ( !\SW[1]~input_o  & ( \SW[2]~input_o  & ( (!\secret_key[1]~reg0_q  & 
// (\secret_key[2]~reg0_q  & (!\secret_key[0]~reg0_q  $ (\SW[0]~input_o )))) ) ) ) # ( \SW[1]~input_o  & ( !\SW[2]~input_o  & ( (\secret_key[1]~reg0_q  & (!\secret_key[2]~reg0_q  & (!\secret_key[0]~reg0_q  $ (\SW[0]~input_o )))) ) ) ) # ( !\SW[1]~input_o  & 
// ( !\SW[2]~input_o  & ( (!\secret_key[1]~reg0_q  & (!\secret_key[2]~reg0_q  & (!\secret_key[0]~reg0_q  $ (\SW[0]~input_o )))) ) ) )

	.dataa(!\secret_key[0]~reg0_q ),
	.datab(!\secret_key[1]~reg0_q ),
	.datac(!\secret_key[2]~reg0_q ),
	.datad(!\SW[0]~input_o ),
	.datae(!\SW[1]~input_o ),
	.dataf(!\SW[2]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~2 .extended_lut = "off";
defparam \Equal0~2 .lut_mask = 64'h8040201008040201;
defparam \Equal0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[3]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[3]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[3]~reg0 .is_wysiwyg = "true";
defparam \secret_key[3]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[4]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[4]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[4]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[4]~reg0 .is_wysiwyg = "true";
defparam \secret_key[4]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \secret_key[5]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[5]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[5]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[5]~reg0 .is_wysiwyg = "true";
defparam \secret_key[5]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~3 (
// Equation(s):
// \Equal0~3_combout  = ( \SW[4]~input_o  & ( \SW[5]~input_o  & ( (\secret_key[4]~reg0_q  & (\secret_key[5]~reg0_q  & (!\secret_key[3]~reg0_q  $ (\SW[3]~input_o )))) ) ) ) # ( !\SW[4]~input_o  & ( \SW[5]~input_o  & ( (!\secret_key[4]~reg0_q  & 
// (\secret_key[5]~reg0_q  & (!\secret_key[3]~reg0_q  $ (\SW[3]~input_o )))) ) ) ) # ( \SW[4]~input_o  & ( !\SW[5]~input_o  & ( (\secret_key[4]~reg0_q  & (!\secret_key[5]~reg0_q  & (!\secret_key[3]~reg0_q  $ (\SW[3]~input_o )))) ) ) ) # ( !\SW[4]~input_o  & 
// ( !\SW[5]~input_o  & ( (!\secret_key[4]~reg0_q  & (!\secret_key[5]~reg0_q  & (!\secret_key[3]~reg0_q  $ (\SW[3]~input_o )))) ) ) )

	.dataa(!\secret_key[3]~reg0_q ),
	.datab(!\secret_key[4]~reg0_q ),
	.datac(!\secret_key[5]~reg0_q ),
	.datad(!\SW[3]~input_o ),
	.datae(!\SW[4]~input_o ),
	.dataf(!\SW[5]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~3 .extended_lut = "off";
defparam \Equal0~3 .lut_mask = 64'h8040201008040201;
defparam \Equal0~3 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state[0] (
	.clk(\CLOCK_50~input_o ),
	.d(\Mux0~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(current_state[0]),
	.prn(vcc));
// synopsys translate_off
defparam \current_state[0] .is_wysiwyg = "true";
defparam \current_state[0] .power_up = "low";
// synopsys translate_on

dffeas \current_state[1] (
	.clk(\CLOCK_50~input_o ),
	.d(\Mux1~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(current_state[1]),
	.prn(vcc));
// synopsys translate_off
defparam \current_state[1] .is_wysiwyg = "true";
defparam \current_state[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (!current_state[2] & (!current_state[3] & (!current_state[0] & !current_state[1])))

	.dataa(!current_state[2]),
	.datab(!current_state[3]),
	.datac(!current_state[0]),
	.datad(!current_state[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~0 .extended_lut = "off";
defparam \Mux0~0 .lut_mask = 64'h8000800080008000;
defparam \Mux0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = ( \Mux1~0_combout  & ( \Mux0~0_combout  ) ) # ( !\Mux1~0_combout  & ( \Mux0~0_combout  ) ) # ( \Mux1~0_combout  & ( !\Mux0~0_combout  & ( ((!\Equal0~1_combout ) # ((!\Equal0~2_combout ) # (!\Equal0~3_combout ))) # (\Equal0~0_combout ) ) 
// ) )

	.dataa(!\Equal0~0_combout ),
	.datab(!\Equal0~1_combout ),
	.datac(!\Equal0~2_combout ),
	.datad(!\Equal0~3_combout ),
	.datae(!\Mux1~0_combout ),
	.dataf(!\Mux0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~1 .extended_lut = "off";
defparam \Mux0~1 .lut_mask = 64'h0000FFFDFFFFFFFF;
defparam \Mux0~1 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state[3] (
	.clk(\CLOCK_50~input_o ),
	.d(\Mux0~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(current_state[3]),
	.prn(vcc));
// synopsys translate_off
defparam \current_state[3] .is_wysiwyg = "true";
defparam \current_state[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (current_state[2] & (!current_state[3] & (!current_state[0] & current_state[1])))

	.dataa(!current_state[2]),
	.datab(!current_state[3]),
	.datac(!current_state[0]),
	.datad(!current_state[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~0 .extended_lut = "off";
defparam \Mux1~0 .lut_mask = 64'h0040004000400040;
defparam \Mux1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~1 (
// Equation(s):
// \Mux1~1_combout  = ( \Mux1~0_combout  & ( \Equal1~0_combout  ) ) # ( !\Mux1~0_combout  & ( \Equal1~0_combout  ) ) # ( \Mux1~0_combout  & ( !\Equal1~0_combout  & ( (!\Equal0~0_combout  & (\Equal0~1_combout  & (\Equal0~2_combout  & \Equal0~3_combout ))) ) ) 
// )

	.dataa(!\Equal0~0_combout ),
	.datab(!\Equal0~1_combout ),
	.datac(!\Equal0~2_combout ),
	.datad(!\Equal0~3_combout ),
	.datae(!\Mux1~0_combout ),
	.dataf(!\Equal1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~1 .extended_lut = "off";
defparam \Mux1~1 .lut_mask = 64'h00000002FFFFFFFF;
defparam \Mux1~1 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state[2] (
	.clk(\CLOCK_50~input_o ),
	.d(\Mux1~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(current_state[2]),
	.prn(vcc));
// synopsys translate_off
defparam \current_state[2] .is_wysiwyg = "true";
defparam \current_state[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal1~0 (
// Equation(s):
// \Equal1~0_combout  = (!current_state[2] & (current_state[3] & (current_state[0] & !current_state[1])))

	.dataa(!current_state[2]),
	.datab(!current_state[3]),
	.datac(!current_state[0]),
	.datad(!current_state[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal1~0 .extended_lut = "off";
defparam \Equal1~0 .lut_mask = 64'h0200020002000200;
defparam \Equal1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \secret_key[0]~reg0 (
	.clk(\CLOCK_50~input_o ),
	.d(\SW[0]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\secret_key[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \secret_key[0]~reg0 .is_wysiwyg = "true";
defparam \secret_key[0]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

assign LEDR[0] = \LEDR[0]~output_o ;

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[2] = \LEDR[2]~output_o ;

assign LEDR[3] = \LEDR[3]~output_o ;

assign LEDR[4] = \LEDR[4]~output_o ;

assign LEDR[5] = \LEDR[5]~output_o ;

assign LEDR[6] = \LEDR[6]~output_o ;

assign LEDR[7] = \LEDR[7]~output_o ;

assign LEDR[8] = \LEDR[8]~output_o ;

assign LEDR[9] = \LEDR[9]~output_o ;

assign secret_key[0] = \secret_key[0]~output_o ;

assign secret_key[1] = \secret_key[1]~output_o ;

assign secret_key[2] = \secret_key[2]~output_o ;

assign secret_key[3] = \secret_key[3]~output_o ;

assign secret_key[4] = \secret_key[4]~output_o ;

assign secret_key[5] = \secret_key[5]~output_o ;

assign secret_key[6] = \secret_key[6]~output_o ;

assign secret_key[7] = \secret_key[7]~output_o ;

assign secret_key[8] = \secret_key[8]~output_o ;

assign secret_key[9] = \secret_key[9]~output_o ;

assign key_available = \key_available~output_o ;

assign key_changed = \key_changed~output_o ;

endmodule
